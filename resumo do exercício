 TESTE DE QUALIDADE DE SOFTWARE

Análise de Qualidade 
Projeto SecureSoft

*****-SP EAD
2024

1.	RESUMO
O projeto SecureSoftQa busca melhorar a qualidade e a segurança dos nossos produtos de software. Através de práticas ágeis, automação de testes e medidas de segurança, o projeto garantirá que nosso software seja robusto e seguro contra ameaças cibernéticas. 
2.	SUMÁRIO
1.	RESUMO	2
2.	SUMÁRIO	3
3.	INTRODUÇÃO	4
4.	O PROJETO	5
4.1	Detalhes do produto ou serviço	5
4.2	Tabela de Análise	5
4.3	Relatório	6
4.4	Evidências	7
4.5	Onde encontrar	8
5.	CONCLUSÃO	8
6.	REFERÊNCIAS BIBLIOGRÁFICAS	8

3.	INTRODUÇÃO

Em um ambiente tecnológico cada vez mais desafiador, a qualidade do software e a segurança cibernética se tornaram prioridades essenciais para qualquer organização.
o projeto SecureSoftQa foi criado para aprimorar esses aspectos em nossos produtos. Utilizando práticas ágeis, automação de testes e medidas de segurança e qualidade para garantir que nosso software seja robusto e protegido contra ameaças cibernéticas.

4.	O PROJETO
Esse produto é uma ideia minha de projeto lembra um programa de segurança 
O projeto SecureSoftQa tem como objetivo melhorar a qualidade dos nossos produtos de software, garantindo que eles sejam robustos, confiáveis e seguros contra ameaças cibernéticas. Este projeto abrangerá várias fases, desde a análise de requisitos e desenvolvimento até testes rigorosos e implantação.
4.1	Detalhes do produto ou serviço
Nome do produto ou serviço:	SecureSoftQa
Fabricante:	Eu MSM
Tempo de uso:
	Em desenvolvimento 
Outros detalhes relevantes sobre o produto:	Integração Contínua (CI/CD)
Feedback dos Usuários
Ambientes de Teste Seguros
Erro! A referência de hiperlink não é válida.
4.2	Tabela de Análise
Característica	Sua percepção	Referência da evidência [caso tenha]
Usabilidade:
	Interface intuitiva e gameficada
Muito amigável  e fácil navegação 
Atenção a acessibilidade  não parece ser acessível a todos melhores acesso para pessoas com  necessidades especiais	 Imagem 1
Matéria prima:	Feedback e Melhoria Contínua Para incorporar e ferramentas e tecnologias modernas	Ferramenta de desenvolvimento 
Recuso humano qualificado 
Performance:	Tempo de Resposta  que leva para o software responder a solicitações dos usuários, esta auto e taxa de erros com frequência.	
Design:	O software deve ser projetado com a capacidade de se adaptar a mudanças nos requisitos do usuário e do mercado, permitindo atualizações e melhorias contínuas. 
Estado atual com segurança mais eficiência 
Obs: o design deve ser eficiente em termos de desempenho e recursos.	Imagem 2

[acrescente mais um a sua escolha]		

4.3	 Relatório 
Projeto utilizado por 1 semana de testes foi descoberto pontos a serem melhorados como 
1 ajustar interface para pessoas com necessidade tipo miopia  e taos.
2 melhorar network entre as equipes
3 problema de compatibilidade 
4 o projeto tem que ter auto atualização sim ou não. 

4.4	 Evidências 
Exemplos de evidências:

Print: 1° PRINT 
 
Imagem 1: Design do iFood

Foto:
` 2° PRINT
 Imagem 2: Foto relógio

4.5	Onde encontrar
https://www.securisoft.com.br/

5.	CONCLUSÃO
fortalecer a qualidade e a segurança do software, o projeto SecureSoft reduzirá falhas e vulnerabilidades

6.	REFERÊNCIAS BIBLIOGRÁFICAS 
Seguir regras ABNT 


dbuG-Hun7er  27/06 aluno Ebac, me desculpa se sai um pouco do exercício mais e isso ae agradeço.
